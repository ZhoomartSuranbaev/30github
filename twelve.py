# 3. –î–≤–∞ —á–∏—Å–ª–∞ –¥–∞—é—Ç —Å—É–º–º—É (Two Sum)
# üìå –ó–∞–¥–∞—á–∞: –î–∞–Ω —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª nums –∏ —á–∏—Å–ª–æ target. –ù–∞–π–¥–∏ –¥–≤–∞ –∏–Ω–¥–µ–∫—Å–∞, —Å—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–≤–Ω–∞ target.
def twoSum(target:int, numbers:list) :
    for i in range(len(numbers)):
        if target - numbers[i] in numbers:
            return [numbers.index(numbers[i]), numbers.index(target - numbers[i], numbers.index(numbers[i]) + 1)]
print(twoSum(6, [3, 3, 4]))

def TwoSum(target: int, numbers: list):
    seen = {}  # {—á–∏—Å–ª–æ: –∏–Ω–¥–µ–∫—Å}
    for i, num in enumerate(numbers):
        complement = target - num
        if complement in seen:
            return [seen[complement], i]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –Ω–∞–π–¥–µ–Ω–Ω–æ–π –ø–∞—Ä—ã
        seen[num] = i  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç
    return []  # –ï—Å–ª–∏ –ø–∞—Ä—ã –Ω–µ—Ç

print(TwoSum(9, [2, 7, 11, 15]))
