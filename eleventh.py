# 2. –°–∂–∞—Ç–∏–µ —Å—Ç—Ä–æ–∫–∏ (Run-Length Encoding)
# üìå –ó–∞–¥–∞—á–∞: –î–∞–Ω —Å—Ç—Ä–æ–∫–∞ s, —Å–æ—Å—Ç–æ—è—â–∞—è —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤. –°–æ–∂–º–∏ –µ—ë, –∑–∞–º–µ–Ω—è—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–∏–º–≤–æ–ª—ã –Ω–∞ –±—É–∫–≤—É + –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π.
def strCompress(s: str) -> str:
    if not s:
        return ""

    compressed = []
    count = 1

    for i in range(1, len(s)):
        if s[i] == s[i - 1]:
            count += 1
        else:
            compressed.append(s[i - 1] + str(count))
            count = 1

    compressed.append(s[-1] + str(count))  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª
    return "".join(compressed)


print(strCompress("aaabbcddd"))  # ‚úÖ "a3b2c1d3"
